#!/usr/bin/env node

var express = require('express'),
    Builder = require('component-builder'),
    path = require('path'),
    fs = require('fs'),
    exists = fs.existsSync || path.existsSync,
    program = require('commander');

// cli

program
  .option('-p, --port <port>', 'specify the port [3000]', 3000)
  .option('-o, --out <dir>', 'output directory [build]', 'build')
  .option('-u, --use <name>', 'use the given build plugin(s)')
  .option('--no-dev', 'do not build development deps')
  .parse(process.argv);

var dir = process.cwd();

// rebuilding

var output = {};

function rebuild(done) {
  var builder = new Builder(dir);

  if (program.dev) {
    builder.development();
  }

  // require middleware plugins
  if (program.use) {
    var modules = program.use.split(',');
    modules.forEach(function(mod){
      var resolved = path.resolve(mod)
        , real = exists(resolved) || exists(resolved + '.js')
        , module = path.resolve('node_modules', mod);

      builder.use(real ? require(resolved) : require(module));
    });
  }


  builder.addSourceURLs();
  builder.prefixUrls('./');
  builder.copyAssetsTo(program.out);

  builder.build(function(err, obj) {
    if (err) return done(err);

    output.js = obj.require + obj.js;
    output.css = obj.css;
    done();
  });
}

// server stuff

var app = express();

app.use(app.router);
app.use(express.static(dir));
app.use(express.directory(dir, { icons: true }));

app.get(/(\/|(\.html))$/, function(req, res, next) {
  rebuild(next);
});

var prefix = '/' + program.out;

app.get(prefix + '/build.js', function(req, res) {
  res.type('js');
  res.send(output.js);
});

app.get(prefix + '/build.css', function(req, res) {
  res.type('css');
  res.send(output.css);
});

app.listen(program.port, function() {
  console.log('Serving on http://localhost:%d/', program.port);
});
